#include <iostream>
#include <iomanip>
#include <string>

using namespace std;

struct Product {
    string name;
    double price;

    Product(const string& n, double p) : name(n), price(p) {}
};

struct CartItem {
    Product product;
    int quantity;
    CartItem* next;

    CartItem(const Product& p, int q) : product(p), quantity(q), next(nullptr) {}
};

class ShoppingCart {
private:
    CartItem* head;

    CartItem* binarySearch(const string& productName) const {
        CartItem* low = head;
        CartItem* high = nullptr;

        CartItem* current = head;
        while (current && current->next) {
            current = current->next;
        }
        high = current;

        while (low <= high) {
            CartItem* mid = low;
            int steps = 0;
            while (mid != high && steps < 2) {
                mid = mid->next;
                steps++;
            }

            if (mid && mid->product.name == productName) {
                return mid;
            }
            else if (mid && mid->product.name < productName) {
                low = mid->next;
            }
            else {
                high = mid;
            }
        }

        return nullptr;
    }

public:
    ShoppingCart() : head(nullptr) {}

    void addItem(const Product& product, int quantity) {
        CartItem* newItem = new CartItem(product, quantity);
        newItem->next = head;
        head = newItem;
        cout << "Added " << quantity << " " << product.name << "(s) to the cart." << endl;
    }

    void removeItem(const string& productName) {
        CartItem* toRemove = binarySearch(productName);

        if (toRemove) {
            if (toRemove == head) {
                head = toRemove->next;
            }
            else {
                CartItem* current = head;
                while (current && current->next != toRemove) {
                    current = current->next;
                }

                if (current) {
                    current->next = toRemove->next;
                }
            }

            delete toRemove;
            cout << "Removed " << productName << " from the cart." << endl;
        }
        else {
            cout << "Item not found in the cart." << endl;
        }
    }

    void searchItem(const string& productName) const {
        CartItem* result = nullptr;
        CartItem* current = head;

        while (current) {
            if (current->product.name == productName) {
                result = current;
                break;
            }

            current = current->next;
        }

        if (result) {
            cout << "Item found in the cart:\n";
            cout << "Product: " << result->product.name << "\n";
            cout << "Quantity: " << result->quantity << "\n";
            cout << "Price: $" << result->product.price << "\n";
            cout << "Total: $" << result->quantity * result->product.price << "\n";
        }
        else {
            cout << "Item not found in the cart." << endl;
        }
    }

    void displayCart() const {
        cout << setw(20) << left << "Product" << setw(10) << left << "Quantity" << setw(10) << left << "Price" << setw(15) << left << "Total" << endl;
        cout << setfill('-') << setw(55) << "-" << setfill(' ') << endl;

        double total = 0.0;
        CartItem* current = head;

        while (current) {
            double itemTotal = current->quantity * current->product.price;
            total += itemTotal;

            cout << setw(20) << left << current->product.name << setw(10) << left << current->quantity
                << setw(10) << left << "$" << current->product.price << setw(15) << left << "$" << itemTotal << endl;

            current = current->next;
        }

        if (!head) {
            cout << "Cart is empty." << endl;
        }
        else {
            cout << setfill('-') << setw(55) << "-" << setfill(' ') << endl;
            cout << setw(45) << left << "Total" << setw(10) << left << "$" << total << endl;
        }
    }

    ~ShoppingCart() {
        while (head) {
            CartItem* temp = head;
            head = head->next;
            delete temp;
        }
    }
};

int main() {
    ShoppingCart cart;

    while (true) {
        cout << "\nChoose an action:\n";
        cout << "1. Add item to the cart\n";
        cout << "2. Remove item from the cart\n";
        cout << "3. Search for an item in the cart\n";
        cout << "4. Display cart\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";

        int choice;
        cin >> choice;

        switch (choice) {
        case 1: {
            string productName;
            double productPrice;
            int quantity;

            cout << "Enter product name: ";
            cin >> productName;

            cout << "Enter product price: $";
            cin >> productPrice;

            cout << "Enter quantity: ";
            cin >> quantity;

            Product product(productName, productPrice);
            cart.addItem(product, quantity);
            break;
        }
        case 2: {
            string productName;
            cout << "Enter product name to remove: ";
            cin >> productName;

            cart.removeItem(productName);
            break;
        }
        case 3: {
            string productName;
            cout << "Enter product name to search: ";
            cin >> productName;

            cart.searchItem(productName);
            break;
        }
        case 4: {
            cart.displayCart();
            break;
        }
        case 5: {
            cout << "Exiting the application. Thank you!\n";
            return 0;
        }
        default:
            cout << "Invalid choice. Please enter a valid option.\n";
        }
    }

    return 0;
}
